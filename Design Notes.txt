
Manager IDEAL  salary >= 20% and <=50% of average of direct subordinates
Hierarchy IDEAL depth is 4

Queries to run:
***************
	1. Reporting structure depth violation
	2. Earning violation

Design Options
****************
Data Structure for storage
--------------------------
	1. Option 1: read and store all objects in a map
		a. Pros:
			i. Easy to implement and add objects
		b. Cons:
			i. Up/Down the chain searching might take some time
	2. Option 2: read and store all objects in a tree structures
		a. Pros:
			i. Mimics domain model
			ii. Easy to get quires
		b. cons
			i. Bit hard to implement
			ii. Add takes time
			iii. Up/Down the chain searching is also not easy

So Option 1 is chosen

Architecture
--------------------------
As there is a possibility of using a real database decided on following thing
1. There would a controller business class object that will have all the business methods
2. Data provider source details interface would be passed to controller and controller would invoke methods on it
3. Above design decision could allow testing module to pass a Mocked Data Provider

Assumptions
**************
1. Data file should present in the root directory with name "data.csv"
2. Data can present in any order
3. There is only one CEO with manager with ID 0
4. There is no infinite loop hierarchy, due to invalid manager fields
5. BigCompany class is the starting point with "main" method

